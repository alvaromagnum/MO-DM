.modal-decision {
    width: 650px!important;
    height: 300px!important;
}

.text-gray {
    color: #778899!important;
}

.color-green{
    color: #90EE90!important;
}

.color-orange{
    color: #FFA500!important;
}

.color-grey{
    color: #CCCCCC!important;
}

.modal-chart {
    width: 750px!important;
    height: 600px!important;
}

.custom-border-white {
    border-color: #fff !important;
}

.padding-20 {
    padding: 20px;
}

.margin-left-50 {
    margin-left: 15px;
}

.custom-border-white:hover {
    border-color: lightskyblue !important;
}

.none {
    display: none;
}

.border-line {
    border: 1px solid white;
    border-radius: 10px!important;
}

tr.pendency-row:nth-child(even) {
    background-color: #94aabf;
}

.light-silver {
    background-color: #94aabf;
}

.padding-bottom-20 {
    padding-bottom: 20px!important;
}

.cart-margin-top {
    margin-top: -32px;
}

.width-30 {
    width: 40%!important;
}

.pendencies {
    width: 100%;
    height: 350px;
    padding: 10px;
    background: lightslategrey;
    overflow-y: auto;
    border-bottom-left-radius: 10px;
    border-bottom-right-radius: 10px;
}

.radar-chart-motivated {
    width: 100%;
    height: 350px;
    background: white;
    border-bottom-left-radius: 10px;
    border-bottom-right-radius: 10px;
}

.radar-chart-custom {
    width: 100%;
    height: 350px;
    background: white;
    margin-top: -1px;
    border-bottom-left-radius: 10px;
    border-bottom-right-radius: 10px;
}

.bubble-chart-custom {
    width: 100%;
    height: 350px;
    background: #ececec;
    margin-top: -1px;
    border-radius: 10px;
}

.white-border {
    border: 1px solid slategrey!important;
}

.bg-gradient-warning-text {
    color: orange;
}

.bg-gradient-danger-text {
    color: orangered;
}

.bg-gradient-success-text {
    color: green;
}

.ol-ranking { /*https://codepen.io/michellebarker/pen/poLoeRq*/
    list-style: none;
    counter-reset: list;
    padding: 0 1rem;
}

.li-ranking:hover {
    box-shadow: 0.1rem 0.1rem 1.5rem #ececec;
}

.li-ranking-default {
    --c1: #1a2035;
}

.li-ranking-green {
    --c1: #3fac6c;
}

.li-ranking-yellow {
    --c1: #f5ef3d;
}

.li-ranking-red {
    --c1: #f14c51;
}

.li-ranking {
    --stop: calc(100% / var(--length) * var(--i));
    --l: 60%;
    --l2: 90%;
    --h: calc((var(--i) - 1) * (2000 / var(--length)));
    --c2: #ececec;
    /*--c1: hsl(var(--h), 70%, var(--l));*/
    /*--c2: hsl(var(--h), 70%, var(--l2));*/

    height: 150px;
    position: relative;
    counter-increment: list;
    max-width: 45rem;
    margin: 1rem auto;
    padding: 2rem 1rem 1rem;
    box-shadow: 0.1rem 0.1rem 1.5rem rgba(0, 0, 0, 0.3);
    border-radius: 0.25rem;
    overflow: hidden;
    background-color: white;
}

.li-ranking::before {
    content: '';
    display: block;
    width: 100%;
    height: 1rem;
    position: absolute;
    top: 0;
    left: 0;
    background: linear-gradient(to right, var(--c1) var(--stop), var(--c2) var(--stop));
}

.h3-ranking {
    display: flex;
    align-items: baseline;
    margin: 0 0 1rem;
    color: black!important;
}

.h3-ranking::before {
    display: flex;
    justify-content: center;
    align-items: center;
    flex: 0 0 auto;
    margin-right: 1rem;
    width: 3rem;
    height: 3rem;
    content: counter(list);
    padding: 1rem;
    border-radius: 50%;
    background-color: var(--c1);
    color: white;
    font-weight: bolder;
    font-size: 15pt;
}

.text-black {
    color: black!important;
}

.width-100 {
    width: 100%;
}

.modal-results {
    max-width: 60%!important;
    max-height: 90%!important;
}

.row-results {
    margin:20px;
}

.row-results-header {
    background: #ececec;
    color: black;
}

.container-results {
    background: lightslategray;
    border: 4px solid #ececec;
    border-radius: 5px;
}

.div-results-1 {
    width: 90%;
    margin: auto;
}

.div-results-2 {
    padding:10px;
}

.project-config-canvas {
    width: 100%;
    height: 550px;
    margin: auto;
    border: 1px solid black;
    border-radius:10px;
    z-index: 999;
    background: lightslategray;
}

.dragable-item {
    cursor: pointer;
}

.padding-left-80 {
    padding-left: 80px;
}

.stakeholder-node-fixed-size {
    width:400px!important;
}

.editable-input {
    width: 550px;
}

.text-yellow {
    color: yellow!important;
}

.text-red {
    color: palevioletred!important;
}

.text-green {
    color: lawngreen!important;
}

.card-white {
    background: #202940!important;
    border: #f0f2f5 2px solid!important;
    box-shadow: 8px 8px black!important;
}

.hide-scroll {
    overflow: hidden!important;
}

.header-decisions {
    width:50%!important;
}

.header-evc {
    width:150px!important;
}

.card-white-header {
    color: black!important;
}

.text-dark-yellow {
    color: #ffb900!important;
}

.sankeyChartDiv {
    width: 100%;
    height: 550px;
    margin: auto;
    border: 1px solid black;
    border-radius:10px;
    z-index: 999;
    background: slategrey;
}

.margin-top-10 {
    margin-top: 10px;
}

.margin-top-30-negative {
    margin-top: -30px;
}

.margin-top-60-negative {
    margin-top: -60px;
}

.icon-button {
    width: 100%;!important
    height: 100%!important;
    font-size: 1.3rem!important;
}

.my-decisions-content {
    width: 100%;
    height: 550px;
    margin: auto;
    border: 1px solid black;
    border-radius:10px;
    z-index: 999;
    background: #f0f2f5;
    color: black;
    padding: 20px;
}

.project-name {
    color: white!important;
    font-size: 20pt;
}

.align-right {
    text-align: right;
}

.select-node {
    width: 200px;
    border: 1px solid;
    border-radius: 10px;
    padding: 5px;
}

.select-chart {
    width: 100%;
    border: 2px solid #ececec;
    padding: 5px;
    border-top-left-radius: 10px;
    border-top-right-radius: 10px;
}

.select-decision {
    width: 100%;
    border: 1px solid;
    border-radius: 10px;
    padding: 5px;
}

.select-course {
    width: 100%!important;
    height: 40px!important;
    border: 1px solid lightgrey!important;
    border-radius: 5px!important;
    padding: 5px!important;
    color: lightgrey!important;
    background: #202940;
}

.select-course-selected {
    border: 2px solid lightslategrey!important;
}

.select-course:focus {
    border: 2px solid lightslategrey!important;
}

.select-course:focus-visible {
    border: 2px solid lightslategrey!important;
}

.select-course-label {
    color: grey!important;
}

.node-user-name {
    color:black!important;
}

.select-divider {
    background: slategrey;
    color: white;
}

:root {
    --dfBackgroundColor: #ffffff;
    --dfBackgroundSize: 0px;
    --dfBackgroundImage: none;

    --dfNodeType: flex;
    --dfNodeTypeFloat: none;
    --dfNodeBackgroundColor: #ffffff;
    --dfNodeTextColor: #000000;
    --dfNodeBorderSize: 7px;
    --dfNodeBorderColor: #000000;
    --dfNodeBorderRadius: 4px;
    --dfNodeMinHeight: 40px;
    --dfNodeMinWidth: 160px;
    --dfNodePaddingTop: 15px;
    --dfNodePaddingBottom: 15px;
    --dfNodeBoxShadowHL: 0px;
    --dfNodeBoxShadowVL: 2px;
    --dfNodeBoxShadowBR: 15px;
    --dfNodeBoxShadowS: 2px;
    --dfNodeBoxShadowColor: #000000;

    --dfNodeHoverBackgroundColor: #ffffff;
    --dfNodeHoverTextColor: #000000;
    --dfNodeHoverBorderSize: 7px;
    --dfNodeHoverBorderColor: #000000;
    --dfNodeHoverBorderRadius: 4px;

    --dfNodeHoverBoxShadowHL: 0px;
    --dfNodeHoverBoxShadowVL: 2px;
    --dfNodeHoverBoxShadowBR: 15px;
    --dfNodeHoverBoxShadowS: 2px;
    --dfNodeHoverBoxShadowColor: #4ea9ff;

    --dfNodeSelectedBackgroundColor: #000000;
    --dfNodeSelectedTextColor: #ffffff;
    --dfNodeSelectedBorderSize: 7px;
    --dfNodeSelectedBorderColor: #000000;
    --dfNodeSelectedBorderRadius: 4px;

    --dfNodeSelectedBoxShadowHL: 0px;
    --dfNodeSelectedBoxShadowVL: 2px;
    --dfNodeSelectedBoxShadowBR: 15px;
    --dfNodeSelectedBoxShadowS: 2px;
    --dfNodeSelectedBoxShadowColor: #4ea9ff;

    --dfInputBackgroundColor: rgba(16, 146, 133, 1);
    --dfInputBorderSize: 2px;
    --dfInputBorderColor: #000000;
    --dfInputBorderRadius: 50px;
    --dfInputLeft: -27px;
    --dfInputHeight: 20px;
    --dfInputWidth: 20px;

    --dfInputHoverBackgroundColor: #ffffff;
    --dfInputHoverBorderSize: 2px;
    --dfInputHoverBorderColor: #000000;
    --dfInputHoverBorderRadius: 50px;

    --dfOutputBackgroundColor: rgba(212, 212, 51, 1);
    --dfOutputBorderSize: 2px;
    --dfOutputBorderColor: #000000;
    --dfOutputBorderRadius: 50px;
    --dfOutputRight: -3px;
    --dfOutputHeight: 20px;
    --dfOutputWidth: 20px;

    --dfOutputHoverBackgroundColor: #ffffff;
    --dfOutputHoverBorderSize: 2px;
    --dfOutputHoverBorderColor: #000000;
    --dfOutputHoverBorderRadius: 50px;

    --dfLineWidth: 5px;
    --dfLineColor: rgba(0, 0, 0, 1);
    --dfLineHoverColor: white;
    --dfLineSelectedColor: white;

    --dfRerouteBorderWidth: 2px;
    --dfRerouteBorderColor: #000000;
    --dfRerouteBackgroundColor: #ffffff;

    --dfRerouteHoverBorderWidth: 2px;
    --dfRerouteHoverBorderColor: #000000;
    --dfRerouteHoverBackgroundColor: #ffffff;

    --dfDeleteDisplay: block;
    --dfDeleteColor: #ffffff;
    --dfDeleteBackgroundColor: #000000;
    --dfDeleteBorderSize: 2px;
    --dfDeleteBorderColor: #ffffff;
    --dfDeleteBorderRadius: 50px;
    --dfDeleteTop: -15px;

    --dfDeleteHoverColor: #000000;
    --dfDeleteHoverBackgroundColor: #ffffff;
    --dfDeleteHoverBorderSize: 2px;
    --dfDeleteHoverBorderColor: #000000;
    --dfDeleteHoverBorderRadius: 50px;

}

#drawflow {
    background: var(--dfBackgroundColor);
    background-size: var(--dfBackgroundSize) var(--dfBackgroundSize);
    background-image: var(--dfBackgroundImage);
}

.drawflow .drawflow-node {
    display: var(--dfNodeType);
    background: var(--dfNodeBackgroundColor);
    color: var(--dfNodeTextColor);
    border: var(--dfNodeBorderSize)  solid var(--dfNodeBorderColor);
    border-radius: var(--dfNodeBorderRadius);
    min-height: var(--dfNodeMinHeight);
    width: auto;
    min-width: var(--dfNodeMinWidth);
    padding-top: var(--dfNodePaddingTop);
    padding-bottom: var(--dfNodePaddingBottom);
    -webkit-box-shadow: var(--dfNodeBoxShadowHL) var(--dfNodeBoxShadowVL) var(--dfNodeBoxShadowBR) var(--dfNodeBoxShadowS) var(--dfNodeBoxShadowColor);
    box-shadow:  var(--dfNodeBoxShadowHL) var(--dfNodeBoxShadowVL) var(--dfNodeBoxShadowBR) var(--dfNodeBoxShadowS) var(--dfNodeBoxShadowColor);
}

.drawflow .drawflow-node:hover {
    background: var(--dfNodeHoverBackgroundColor);
    color: var(--dfNodeHoverTextColor);
    border: var(--dfNodeHoverBorderSize)  solid var(--dfNodeHoverBorderColor);
    border-radius: var(--dfNodeHoverBorderRadius);
    -webkit-box-shadow: var(--dfNodeHoverBoxShadowHL) var(--dfNodeHoverBoxShadowVL) var(--dfNodeHoverBoxShadowBR) var(--dfNodeHoverBoxShadowS) var(--dfNodeHoverBoxShadowColor);
    box-shadow:  var(--dfNodeHoverBoxShadowHL) var(--dfNodeHoverBoxShadowVL) var(--dfNodeHoverBoxShadowBR) var(--dfNodeHoverBoxShadowS) var(--dfNodeHoverBoxShadowColor);
}

.drawflow .drawflow-node.selected {
    background: var(--dfNodeSelectedBackgroundColor);
    color: var(--dfNodeSelectedTextColor);
    border: var(--dfNodeSelectedBorderSize)  solid var(--dfNodeSelectedBorderColor);
    border-radius: var(--dfNodeSelectedBorderRadius);
    -webkit-box-shadow: var(--dfNodeSelectedBoxShadowHL) var(--dfNodeSelectedBoxShadowVL) var(--dfNodeSelectedBoxShadowBR) var(--dfNodeSelectedBoxShadowS) var(--dfNodeSelectedBoxShadowColor);
    box-shadow:  var(--dfNodeSelectedBoxShadowHL) var(--dfNodeSelectedBoxShadowVL) var(--dfNodeSelectedBoxShadowBR) var(--dfNodeSelectedBoxShadowS) var(--dfNodeSelectedBoxShadowColor);
}

.drawflow .drawflow-node .input {
    left: var(--dfInputLeft);
    background: var(--dfInputBackgroundColor);
    border: var(--dfInputBorderSize)  solid var(--dfInputBorderColor);
    border-radius: var(--dfInputBorderRadius);
    height: var(--dfInputHeight);
    width: var(--dfInputWidth);
}

.drawflow .drawflow-node .input:hover {
    background: var(--dfInputHoverBackgroundColor);
    border: var(--dfInputHoverBorderSize)  solid var(--dfInputHoverBorderColor);
    border-radius: var(--dfInputHoverBorderRadius);
}

.drawflow .drawflow-node .outputs {
    float: var(--dfNodeTypeFloat);
}

.drawflow .drawflow-node .output {
    right: var(--dfOutputRight);
    background: var(--dfOutputBackgroundColor);
    border: var(--dfOutputBorderSize)  solid var(--dfOutputBorderColor);
    border-radius: var(--dfOutputBorderRadius);
    height: var(--dfOutputHeight);
    width: var(--dfOutputWidth);
}

.step-node {
    background: lightgrey!important;
}

.step-node-header {
    background-color: rebeccapurple;
    padding: 5px;
    color: white;
}

.decision-node-header {
    background-color: #0f5132;
    padding: 5px;
    color: white;
}

.stakeholder-node-header {
    background-color: steelblue;
    padding: 5px;
    color: white;
    width: 100%;
}

.rounded-circle-black {
    border-radius: 50%!important;
    border: 4px solid black;
}

.rounded-circle-black-mini {
    border-radius: 50%!important;
    border: 2px solid black;
}

.pendencies-container {
    white-space: normal;
}

.decision-node {
    background: black!important;
}

.stakeholder-node {
    background: white!important;
}

.step-output-1 {
    background: cornflowerblue!important;
}

.step-output-2 {
    background: rgba(16, 146, 133, 1)!important;
}

.step-input {
    background: cornflowerblue!important;
}

.stakeholder-input {
    background: rgba(212, 212, 51, 1)!important;
}

.drawflow .drawflow-node .output:hover {
    background: var(--dfOutputHoverBackgroundColor);
    border: var(--dfOutputHoverBorderSize)  solid var(--dfOutputHoverBorderColor);
    border-radius: var(--dfOutputHoverBorderRadius);
}

.drawflow .connection .main-path {
    stroke-width: var(--dfLineWidth);
    stroke: var(--dfLineColor);
}

.drawflow .connection .main-path:hover {
    stroke: var(--dfLineHoverColor);
}

.drawflow .connection .main-path.selected {
    stroke: var(--dfLineSelectedColor);
}

.drawflow .connection .point {
    stroke: var(--dfRerouteBorderColor);
    stroke-width: var(--dfRerouteBorderWidth);
    fill: var(--dfRerouteBackgroundColor);
}

.drawflow .connection .point:hover {
    stroke: var(--dfRerouteHoverBorderColor);
    stroke-width: var(--dfRerouteHoverBorderWidth);
    fill: var(--dfRerouteHoverBackgroundColor);
}

.drawflow-delete {
    display: var(--dfDeleteDisplay);
    color: var(--dfDeleteColor);
    background: var(--dfDeleteBackgroundColor);
    border: var(--dfDeleteBorderSize) solid var(--dfDeleteBorderColor);
    border-radius: var(--dfDeleteBorderRadius);
}

.parent-node .drawflow-delete {
    top: var(--dfDeleteTop);
}

.drawflow-delete:hover {
    color: var(--dfDeleteHoverColor);
    background: var(--dfDeleteHoverBackgroundColor);
    border: var(--dfDeleteHoverBorderSize) solid var(--dfDeleteHoverBorderColor);
    border-radius: var(--dfDeleteHoverBorderRadius);
}

/* Firefox */
*{
    scrollbar-width: auto;
    scrollbar-color: #202940 #ececec;
}

/* Other browsers */
*::-webkit-scrollbar{
    width: 16px;
}

*::-webkit-scrollbar-track{
    background: #ececec;
}

*::-webkit-scrollbar-thumb{
    background-color: #6c757d;
    border-radius: 0px;
    border: 3px solid #6c757d;
}